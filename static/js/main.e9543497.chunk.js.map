{"version":3,"sources":["Navigation.js","Home.js","MainLayout.js","Product.js","Shop.js","Routes.js","serviceWorker.js","index.js","logo.svg"],"names":["Navigation","className","to","Home","src","width","height","frameBorder","class","allowFullScreen","MainLayout","Shop","props","name","alt","id","key","onClick","addToCart","useState","cart","setCart","event","console","log","target","previousSibling","value","parseInt","productComponents","map","item","Product","Routes","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"kPAgBeA,MAXf,WACE,OACE,yBAAKC,UAAU,OACb,4BACE,4BAAI,kBAAC,IAAD,CAAMC,GAAG,KAAT,SACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,SAAT,YCWGC,MAdf,WACE,OACE,yBAAKF,UAAU,OACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,QACf,qDACA,4BAAQG,IAAI,6CAA6CC,MAAM,MAAMC,OAAO,MAAMC,YAAY,IAAIC,MAAM,cACpGC,iBAAe,OCEVC,I,QCCAC,MAdf,SAAcC,GACZ,OACE,yBAAKX,UAAU,WACb,4BAAKW,EAAMC,MACX,yBAAKZ,UAAU,cAAcG,IAAKQ,EAAMR,IAAKU,IAAI,YACjD,+CACE,yBAAKb,UAAU,OACf,2BAAOc,GAAIH,EAAMC,OAAe,uBAAGG,IAAKJ,EAAMC,KAAMZ,UAAU,yBAAyBgB,QAASL,EAAMM,gBCkC/FP,MArCf,WACE,IADc,EASUQ,mBAAS,GATnB,mBASPC,EATO,KASDC,EATC,KAWRH,EAAY,SAACI,GACjBC,QAAQC,IAAIF,EAAMG,OAAOC,gBAAgBC,OACzCJ,QAAQC,IAAIF,EAAMG,OAAOC,gBAAgBX,IAEzCM,EAAQO,SAASR,GAAQQ,SAASN,EAAMG,OAAOC,gBAAgBC,QAC/DL,EAAMG,OAAOC,gBAAgBC,MAAQ,IAGjCE,EAlBW,CACf,CAAChB,KAAM,WAAaT,IAAK,yLACzB,CAACS,KAAM,sBAAwBT,IAAK,yLACpC,CAACS,KAAM,0BAA4BT,IAAK,mLACxC,CAACS,KAAM,2BAA6BT,IAAK,mJACzC,CAACS,KAAM,uBAAyBT,IAAK,0LAaJ0B,KAAI,SAASC,GAC9C,OAAO,kBAACC,EAAD,CAASnB,KAAMkB,EAAKlB,KAAMG,IAAKe,EAAKlB,KAAMT,IAAK2B,EAAK3B,IAAKc,UAAWA,OAG7E,OACE,yBAAKjB,UAAU,OACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,eAAc,uBAAGA,UAAU,gCAAgCmB,IAC1E,yBAAKnB,UAAU,QACb,yBAAKA,UAAU,YACd4B,MCnBMI,EAXA,WACb,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWjC,IACjC,kBAAC,IAAD,CAAO+B,OAAK,EAACC,KAAK,QAAQC,UAAWzB,O,MCCzB0B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL/B,QAAQ+B,MAAMA,EAAMC,a,kBEzI5BC,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.e9543497.chunk.js","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter, Switch, Route , Link } from \"react-router-dom\";\n\nfunction Navigation() {\n  return (\n    <div className=\"Nav\">\n      <ul>\n        <li><Link to=\"/\">Home</Link></li>\n        <li><Link to=\"/shop\">Shop</Link></li>\n      </ul>\n    </div>\n  );\n}\n\nexport default Navigation;","import React from 'react';\nimport logo from './logo.svg';\nimport Navigation from './Navigation.js';\nimport './App.css';\n\nimport { BrowserRouter, Switch, Route , Link } from \"react-router-dom\";\n\nfunction Home() {\n  return (\n    <div className=\"App\">\n      <Navigation />\n      <div className=\"home\">\n      <p>The Red Bull Shop Home</p>\n      <iframe src=\"https://giphy.com/embed/Oe5cPGbSpCG5Mt3uve\" width=\"384\" height=\"480\" frameBorder=\"0\" class=\"giphy-embed\" \n          allowFullScreen></iframe>\n      </div>\n      \n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction MainLayout() {\n  return (\n    <div className=\"App\">\n      <header >\n        Main Layout\n        <p>Main</p>\n      </header>\n      <p>Bar</p>\n    </div>\n  );\n}\n\nexport default MainLayout;","import React from 'react';\nimport { BrowserRouter, Switch, Route , Link } from \"react-router-dom\";\n\nfunction Shop(props) {\n  return (\n    <div className=\"product\">\n      <h3>{props.name}</h3>\n      <img className=\"product-img\" src={props.src} alt=\"picture\"/>\n      <label>Quantity:&nbsp;\n        <div className=\"row\">\n        <input id={props.name} ></input><i key={props.name} className=\"fas fa-cart-plus fa-lg\" onClick={props.addToCart}></i>\n        </div>\n      </label>\n    </div>\n  );\n}\n\nexport default Shop;","import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Navigation from './Navigation.js';\nimport Product from './Product.js';\nimport { BrowserRouter, Switch, Route , Link } from \"react-router-dom\";\n\nfunction Shop() {\n  const products = [\n    {name: \"Red Bull\",  src: \"https://images.ctfassets.net/lcr8qbvxj7mh/3MtJ6qOUKJVqj3bqRSIDFU/43be4ce73bcf1a961ef78f442e3af403/ZA_RBED_250_Single-Unit_close_ambient_ORIGINAL_canwidth528px.png?w=350&q=100&fm=png\"},\n    {name: \"Red Bull Sugar Free\",  src: \"https://images.ctfassets.net/lcr8qbvxj7mh/3KgIUlpzwoH6K4l0uVkxai/75f18f7e344f742fee52c2d76748ce62/ZA_RBSF_250_Single-Unit_close_ambient_ORIGINAL_canwidth528px.png?w=350&q=100&fm=png\"},\n    {name: \"Red Bull Summer Edition\",  src: \"https://images.ctfassets.net/lcr8qbvxj7mh/7sYv32vVC0iL5z1BFWMJGO/e0f4f580bcc15cdd168548ac9f8f04c2/ZA_RBSUM_250_Single_Unit_close_ambient_ORIGINAL_LRES_2.png?w=350&q=100&fm=png\"},\n    {name: \"Red Bull Coconut Edition\",  src: \"https://images.ctfassets.net/lcr8qbvxj7mh/74DlGwBPHHGGLQ8kh41eab/fd9d2549eebd4fd255b2ed5cc780dcd8/ZA-EN_Summer_2019_Full.png?w=350&q=100&fm=png\"},\n    {name: \"Red Bull Red Edition\",  src: \"https://images.ctfassets.net/lcr8qbvxj7mh/3ibiqytJJGZYha5dpxRiFI/6b757e34cdef9748b42b05f8488f1e83/ZA_RBRE_250_Single-Unit_close_ambient_ORIGINAL_canwidth528px.png?w=350&q=100&fm=png\"},\n  ];\n\n  const [cart, setCart] = useState(0);\n\n  const addToCart = (event) => {\n    console.log(event.target.previousSibling.value);\n    console.log(event.target.previousSibling.id);\n\n    setCart(parseInt(cart) + parseInt(event.target.previousSibling.value));\n    event.target.previousSibling.value = \"\";\n  }\n\n  const productComponents = products.map(function(item){\n    return <Product name={item.name} key={item.name} src={item.src} addToCart={addToCart}/>;\n  });\n\n  return (\n    <div className=\"App\">\n      <Navigation />\n      <div className=\"right-align\"><i className=\"fas fa-cart-arrow-down fa-lg\">{cart}</i></div>\n      <div className=\"shop\">\n        <div className=\"products\">\n        {productComponents}\n        </div>\n      </div>\n        \n    </div>\n  );\n}\n\nexport default Shop;","import React from \"react\";\nimport { BrowserRouter, Switch, Route , Link } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport MainLayout from \"./MainLayout\";\nimport Shop from \"./Shop\";\n\nconst Routes = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/shop\" component={Shop} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Routes;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './Routes';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}